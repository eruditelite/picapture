################################################################################
## exposure.py
##
## Adjust the exposure based on the given image.
################################################################################

__author__ = "John Jacques"
__version__ = __VERSION__
__license__ = 'MIT'

import controls
import numpy
import os
import PIL
import statistics
import termplotlib
import zwoasi

class Exposure(object):

    def __init__(self, camera, logging):
        super().__init__()
        self.camera = camera
        self.logging = logging
        self.logging.debug(f"Created {self}")

    def adjust(self, controls, raw_image, show_hist=False):
        self.logging.debug(f"Adjusting controls {controls}!")
        roi = self.camera.get_roi_format()
        mode = None
        if len(raw_image.shape) == 3:
            raw_image = raw_image[:, :, ::-1] # convert bgr to rgb
        if roi[3] == zwoasi.ASI_IMG_RAW16:
            mode = 'I;16'
        image = PIL.Image.fromarray(raw_image, mode=mode)
        median_image = numpy.median(raw_image)
        print(f"median of the image is {median_image}")
        histogram = image.histogram()
        histR = histogram[0:255]
        histG = histogram[256:511]
        histB = histogram[512:767]
        median_histogram = statistics.median(histogram)
        medR = statistics.median(histR)
        medG = statistics.median(histG)
        medB = statistics.median(histB)
        print(f"median of the histograms {medR}/{medG}/{medB}")

        if show_hist:
            x = list(range(0, 100))
            figure = termplotlib.figure()
            figure.plot(x, histR, label="histR")
            figure.plot(x, histG, label="histG")
            figure.plot(x, histB, label="histB")
            figure.show()
